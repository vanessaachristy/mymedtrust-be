/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RecordContract,
  RecordContractInterface,
} from "../RecordContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "encryptedID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dataHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "issuerDoctorAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum RecordContract.RecordStatus",
        name: "recordStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "patientAddr",
        type: "address",
      },
    ],
    name: "RecordCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "recordList",
    outputs: [
      {
        internalType: "string",
        name: "encryptedID",
        type: "string",
      },
      {
        internalType: "string",
        name: "dataHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "issuerDoctorAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "patientAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "enum RecordContract.RecordStatus",
        name: "recordStatus",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encryptedID",
        type: "string",
      },
      {
        internalType: "string",
        name: "_dataHash",
        type: "string",
      },
      {
        internalType: "address",
        name: "_issuerDoctorAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_patientAddr",
        type: "address",
      },
    ],
    name: "createRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encryptedID",
        type: "string",
      },
      {
        internalType: "string",
        name: "_dataHash",
        type: "string",
      },
      {
        internalType: "enum RecordContract.RecordStatus",
        name: "_recordStatus",
        type: "uint8",
      },
    ],
    name: "editRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encryptedID",
        type: "string",
      },
    ],
    name: "getRecordDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "encryptedID",
            type: "string",
          },
          {
            internalType: "string",
            name: "dataHash",
            type: "string",
          },
          {
            internalType: "address",
            name: "issuerDoctorAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "patientAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "enum RecordContract.RecordStatus",
            name: "recordStatus",
            type: "uint8",
          },
        ],
        internalType: "struct RecordContract.Record",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encryptedID",
        type: "string",
      },
    ],
    name: "removeRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631a9e48f51461005c57806322d0741b1461008c578063448259e8146100a85780638fb124fa146100dd5780639eaf7958146100f9575b600080fd5b61007660048036038101906100719190610b37565b610115565b6040516100839190610f0c565b60405180910390f35b6100a660048036038101906100a19190610b78565b6103ae565b005b6100c260048036038101906100bd9190610b37565b6105bf565b6040516100d496959493929190610e2e565b60405180910390f35b6100f760048036038101906100f29190610b37565b61076e565b005b610113600480360381019061010e9190610c0b565b61081c565b005b61011d610928565b60008260405161012d9190610e17565b90815260200160405180910390206040518060c00160405290816000820180546101569061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546101829061105f565b80156101cf5780601f106101a4576101008083540402835291602001916101cf565b820191906000526020600020905b8154815290600101906020018083116101b257829003601f168201915b505050505081526020016001820180546101e89061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546102149061105f565b80156102615780601f1061023657610100808354040283529160200191610261565b820191906000526020600020905b81548152906001019060200180831161024457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820160009054906101000a900460ff16600281111561036b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028111156103a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050919050565b60004290506000856000876040516103c69190610e17565b908152602001604051809103902060000190805190602001906103ea9291906109c2565b50846000876040516103fc9190610e17565b908152602001604051809103902060010190805190602001906104209291906109c2565b50836000876040516104329190610e17565b908152602001604051809103902060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000876040516104929190610e17565b908152602001604051809103902060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000876040516104f29190610e17565b908152602001604051809103902060040181905550806000876040516105189190610e17565b908152602001604051809103902060050160006101000a81548160ff02191690836002811115610571577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507fa8f9b0e7d42327661d46e236a278fc31bd69ab6e6da45464ed9722bbb8503f098686868585886040516105af96959493929190610e9d565b60405180910390a1505050505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546105f89061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546106249061105f565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050908060010180546106869061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061105f565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900460ff16905086565b60008160405161077e9190610e17565b90815260200160405180910390206000808201600061079d9190610a48565b6001820160006107ad9190610a48565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600090556005820160006101000a81549060ff0219169055505050565b6000429050836000856040516108329190610e17565b908152602001604051809103902060000190805190602001906108569291906109c2565b50826000856040516108689190610e17565b9081526020016040518091039020600101908051906020019061088c9291906109c2565b508060008560405161089e9190610e17565b908152602001604051809103902060040181905550816000856040516108c49190610e17565b908152602001604051809103902060050160006101000a81548160ff0219169083600281111561091d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555050505050565b6040518060c001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060028111156109bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b8280546109ce9061105f565b90600052602060002090601f0160209004810192826109f05760008555610a37565b82601f10610a0957805160ff1916838001178555610a37565b82800160010185558215610a37579182015b82811115610a36578251825591602001919060010190610a1b565b5b509050610a449190610a88565b5090565b508054610a549061105f565b6000825580601f10610a665750610a85565b601f016020900490600052602060002090810190610a849190610a88565b5b50565b5b80821115610aa1576000816000905550600101610a89565b5090565b6000610ab8610ab384610f53565b610f2e565b905082815260208101848484011115610ad057600080fd5b610adb84828561101d565b509392505050565b600081359050610af281611174565b92915050565b600081359050610b078161118b565b92915050565b600082601f830112610b1e57600080fd5b8135610b2e848260208601610aa5565b91505092915050565b600060208284031215610b4957600080fd5b600082013567ffffffffffffffff811115610b6357600080fd5b610b6f84828501610b0d565b91505092915050565b60008060008060808587031215610b8e57600080fd5b600085013567ffffffffffffffff811115610ba857600080fd5b610bb487828801610b0d565b945050602085013567ffffffffffffffff811115610bd157600080fd5b610bdd87828801610b0d565b9350506040610bee87828801610ae3565b9250506060610bff87828801610ae3565b91505092959194509250565b600080600060608486031215610c2057600080fd5b600084013567ffffffffffffffff811115610c3a57600080fd5b610c4686828701610b0d565b935050602084013567ffffffffffffffff811115610c6357600080fd5b610c6f86828701610b0d565b9250506040610c8086828701610af8565b9150509250925092565b610c9381610fbc565b82525050565b610ca281610fbc565b82525050565b610cb18161100b565b82525050565b610cc08161100b565b82525050565b6000610cd182610f84565b610cdb8185610f8f565b9350610ceb81856020860161102c565b610cf48161114f565b840191505092915050565b6000610d0a82610f84565b610d148185610fa0565b9350610d2481856020860161102c565b610d2d8161114f565b840191505092915050565b6000610d4382610f84565b610d4d8185610fb1565b9350610d5d81856020860161102c565b80840191505092915050565b600060c0830160008301518482036000860152610d868282610cc6565b91505060208301518482036020860152610da08282610cc6565b9150506040830151610db56040860182610c8a565b506060830151610dc86060860182610c8a565b506080830151610ddb6080860182610df9565b5060a0830151610dee60a0860182610ca8565b508091505092915050565b610e0281611001565b82525050565b610e1181611001565b82525050565b6000610e238284610d38565b915081905092915050565b600060c0820190508181036000830152610e488189610cff565b90508181036020830152610e5c8188610cff565b9050610e6b6040830187610c99565b610e786060830186610c99565b610e856080830185610e08565b610e9260a0830184610cb7565b979650505050505050565b600060c0820190508181036000830152610eb78189610cff565b90508181036020830152610ecb8188610cff565b9050610eda6040830187610c99565b610ee76060830186610e08565b610ef46080830185610cb7565b610f0160a0830184610c99565b979650505050505050565b60006020820190508181036000830152610f268184610d69565b905092915050565b6000610f38610f49565b9050610f448282611091565b919050565b6000604051905090565b600067ffffffffffffffff821115610f6e57610f6d611120565b5b610f778261114f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610fc782610fe1565b9050919050565b6000819050610fdc82611160565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061101682610fce565b9050919050565b82818337600083830152505050565b60005b8381101561104a57808201518184015260208101905061102f565b83811115611059576000848401525b50505050565b6000600282049050600182168061107757607f821691505b6020821081141561108b5761108a6110f1565b5b50919050565b61109a8261114f565b810181811067ffffffffffffffff821117156110b9576110b8611120565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110611171576111706110c2565b5b50565b61117d81610fbc565b811461118857600080fd5b50565b6003811061119857600080fd5b5056fea2646970667358221220bccd1a285d8b6c63b6eb34f64d8de34895d9ff677920b2ade2f512e20c3eded664736f6c63430008020033";

type RecordContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecordContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RecordContract__factory extends ContractFactory {
  constructor(...args: RecordContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<RecordContract> {
    return super.deploy(overrides || {}) as Promise<RecordContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RecordContract {
    return super.attach(address) as RecordContract;
  }
  override connect(signer: Signer): RecordContract__factory {
    return super.connect(signer) as RecordContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecordContractInterface {
    return new utils.Interface(_abi) as RecordContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RecordContract {
    return new Contract(address, _abi, signerOrProvider) as RecordContract;
  }
}
